{"ast":null,"code":"var _jsxFileName = \"/home/doublezz/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/GitHub/lotustestgit/lotustest/src/Components/CountDoun.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { timeValue } from \"./SetTimer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountDown = _ref => {\n  _s();\n  let {\n    isPaused,\n    timeIsOut,\n    time\n  } = _ref;\n  const [over, setOver] = useState(false);\n  const newTime = useContext(timeValue);\n  const [[m, s], setTime] = useState(time);\n  const updateTimer = () => {};\n  const tick = () => {\n    if (isPaused) return;\n    if (over) {\n      timeIsOut();\n    }\n    ;\n    if (m === 0 && s === 0) {\n      setOver(true);\n    } else if (s === 0) {\n      setTime([m - 1, 59]);\n    } else {\n      setTime([m, s - 1]);\n    }\n  };\n  useEffect(() => {\n    const timerID = setInterval(() => tick(), 1000);\n    return () => clearInterval(timerID);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: `${m.toString().padStart(2, '0')}:${s.toString().padStart(2, '0')}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(CountDown, \"TZSWmKYxksc00+kPyZCG0WXuf7M=\");\n_c = CountDown;\nexport default CountDown;\nvar _c;\n$RefreshReg$(_c, \"CountDown\");","map":{"version":3,"names":["React","useState","useEffect","useContext","timeValue","CountDown","isPaused","timeIsOut","time","over","setOver","newTime","m","s","setTime","updateTimer","tick","timerID","setInterval","clearInterval","toString","padStart"],"sources":["/home/doublezz/Документы/GitHub/lotustestgit/lotustest/src/Components/CountDoun.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { timeValue } from \"./SetTimer\";\n\nconst CountDown = ({isPaused, timeIsOut, time}) => {\n    const [over, setOver] = useState(false);\n    const newTime = useContext(timeValue);\n    const [[m, s], setTime] = useState(time);\n\n    const updateTimer = () => {\n      \n    }\n\n    const tick = () => {\n      if (isPaused) return\n      if (over) {\n        timeIsOut();\n      };\n      if (m === 0 && s === 0) {\n        setOver(true);\n      } else if (s === 0) {\n        setTime([m - 1, 59]);\n      } else {\n        setTime([m, s - 1]);\n      }\n    };\n  \n    useEffect(() => {\n      const timerID = setInterval(() => tick(), 1000);\n      return () => clearInterval(timerID);\n    });\n  \n    return (\n\n        <div>\n          <p>{`${m.toString().padStart(2, '0')}:${s.toString().padStart(2, '0')}`}</p>\n        </div>\n    );\n  };\n  \n\n  export default CountDown;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,SAAS,QAAQ,YAAY;AAAC;AAEvC,MAAMC,SAAS,GAAG,QAAiC;EAAA;EAAA,IAAhC;IAACC,QAAQ;IAAEC,SAAS;IAAEC;EAAI,CAAC;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAMU,OAAO,GAAGR,UAAU,CAACC,SAAS,CAAC;EACrC,MAAM,CAAC,CAACQ,CAAC,EAAEC,CAAC,CAAC,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAACO,IAAI,CAAC;EAExC,MAAMO,WAAW,GAAG,MAAM,CAE1B,CAAC;EAED,MAAMC,IAAI,GAAG,MAAM;IACjB,IAAIV,QAAQ,EAAE;IACd,IAAIG,IAAI,EAAE;MACRF,SAAS,EAAE;IACb;IAAC;IACD,IAAIK,CAAC,KAAK,CAAC,IAAIC,CAAC,KAAK,CAAC,EAAE;MACtBH,OAAO,CAAC,IAAI,CAAC;IACf,CAAC,MAAM,IAAIG,CAAC,KAAK,CAAC,EAAE;MAClBC,OAAO,CAAC,CAACF,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;IACtB,CAAC,MAAM;MACLE,OAAO,CAAC,CAACF,CAAC,EAAEC,CAAC,GAAG,CAAC,CAAC,CAAC;IACrB;EACF,CAAC;EAEDX,SAAS,CAAC,MAAM;IACd,MAAMe,OAAO,GAAGC,WAAW,CAAC,MAAMF,IAAI,EAAE,EAAE,IAAI,CAAC;IAC/C,OAAO,MAAMG,aAAa,CAACF,OAAO,CAAC;EACrC,CAAC,CAAC;EAEF,oBAEI;IAAA,uBACE;MAAA,UAAK,GAAEL,CAAC,CAACQ,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,IAAGR,CAAC,CAACO,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE;IAAC;MAAA;MAAA;MAAA;IAAA;EAAK;IAAA;IAAA;IAAA;EAAA,QACxE;AAEZ,CAAC;AAAC,GAlCEhB,SAAS;AAAA,KAATA,SAAS;AAqCb,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}